{"ast":null,"code":"var _jsxFileName = \"/Users/carlitosredding/Documents/GitHub/React-Toolkit/patchys-todo/src/components/todos/TodoList.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Todo from \"./Todo\";\nimport \"./TodoList.scss\"; // List of TODOS component.\n\nconst TodoList = ({\n  todos,\n  toggleTodo\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"todoList-container\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"ul\", {\n  className: \"todos-list\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }\n}, todos.map(todo => /*#__PURE__*/React.createElement(Todo, Object.assign({\n  key: todo.id\n}, todo, {\n  onClick: () => toggleTodo(todo.id),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }\n})))));\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    completed: PropTypes.bool.isRequired,\n    text: PropTypes.string.isRequired\n  }).isRequired).isRequired,\n  toggleTodo: PropTypes.func.isRequired\n};\nexport default TodoList;","map":{"version":3,"sources":["/Users/carlitosredding/Documents/GitHub/React-Toolkit/patchys-todo/src/components/todos/TodoList.js"],"names":["React","PropTypes","Todo","TodoList","todos","toggleTodo","map","todo","id","propTypes","arrayOf","shape","number","isRequired","completed","bool","text","string","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,iBAAP,C,CACA;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,kBACf;AAAK,EAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAI,EAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGD,KAAK,CAACE,GAAN,CAAWC,IAAD,iBACT,oBAAC,IAAD;AAAM,EAAA,GAAG,EAAEA,IAAI,CAACC;AAAhB,GAAwBD,IAAxB;AAA8B,EAAA,OAAO,EAAE,MAAMF,UAAU,CAACE,IAAI,CAACC,EAAN,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADD,CADH,CADF,CADF;;AAUAL,QAAQ,CAACM,SAAT,GAAqB;AACnBL,EAAAA,KAAK,EAAEH,SAAS,CAACS,OAAV,CACLT,SAAS,CAACU,KAAV,CAAgB;AACdH,IAAAA,EAAE,EAAEP,SAAS,CAACW,MAAV,CAAiBC,UADP;AAEdC,IAAAA,SAAS,EAAEb,SAAS,CAACc,IAAV,CAAeF,UAFZ;AAGdG,IAAAA,IAAI,EAAEf,SAAS,CAACgB,MAAV,CAAiBJ;AAHT,GAAhB,EAIGA,UALE,EAMLA,UAPiB;AAQnBR,EAAAA,UAAU,EAAEJ,SAAS,CAACiB,IAAV,CAAeL;AARR,CAArB;AAWA,eAAeV,QAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Todo from \"./Todo\";\nimport \"./TodoList.scss\";\n// List of TODOS component.\nconst TodoList = ({ todos, toggleTodo }) => (\n  <div className='todoList-container'>\n    <ul className='todos-list'>\n      {todos.map((todo) => (\n        <Todo key={todo.id} {...todo} onClick={() => toggleTodo(todo.id)} />\n      ))}\n    </ul>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n      text: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n  toggleTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}